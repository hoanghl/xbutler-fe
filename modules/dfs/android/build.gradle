// apply plugin: 'com.android.library'
plugins {
  id 'com.android.library'
  id 'org.jetbrains.kotlin.plugin.serialization' version "2.1.20"
}

group = 'tommy.modules.dfs'
version = '0.7.6'

def expoModulesCorePlugin = new File(project(":expo-modules-core").projectDir.absolutePath, "ExpoModulesCorePlugin.gradle")
apply from: expoModulesCorePlugin
applyKotlinExpoModulesCorePlugin()
useCoreDependencies()
useExpoPublishing()

// If you want to use the managed Android SDK versions from expo-modules-core, set this to true.
// The Android SDK versions will be bumped from time to time in SDK releases and may introduce breaking changes in your module code.
// Most of the time, you may like to manage the Android SDK versions yourself.
def useManagedAndroidSdkVersions = false
if (useManagedAndroidSdkVersions) {
  useDefaultAndroidSdkVersions()
} else {
  buildscript {
    // Simple helper that allows the root project to override versions declared by this library.
    ext.safeExtGet = { prop, fallback ->
      rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
    }
  }
  project.android {
    compileSdkVersion safeExtGet("compileSdkVersion", 36)
    defaultConfig {
      minSdkVersion safeExtGet("minSdkVersion", 24)
      targetSdkVersion safeExtGet("targetSdkVersion", 36)
    }
  }
}

android {
  namespace "tommy.modules.dfs"
  defaultConfig {
    versionCode 1
    versionName "0.7.6"
  }
  lintOptions {
    abortOnError false
  }
}




dependencies {
  implementation project(':expo-modules-core')
  implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.9.0"
  implementation "org.jetbrains.kotlinx:kotlinx-datetime:0.7.1"
  implementation("io.github.oshai:kotlin-logging-jvm:7.0.3")
  implementation("ch.qos.logback:logback-classic:1.5.18")
}
